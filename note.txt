Logging Levels:     Numeric value
---------------------------------
logging.NOTSET      0
logging.DEBUG       10
logging.INFO        20
logging.WARNING     30
logging.ERROR       40
logging.CRITICAL    50



|===========================|
|   Logger (root)           |
|---------------------------|
|   Level: DEBAG,...        |
|===========================|
|   Handeler: StreemHandler <"my_STDERR", "my_STDOUT"> 
|             FileHandler <my_Logfile>
|             SMTPHandler <"my_LogMail">
|---------------------------|
|   Level: WARNING,...      |
|---------------------------|
|   Formatter: "myformat"   |
|===========================|
              ||
              \/
STDOUT, STDERR, Logfile, Email




Tip #1: Use dictConfig.
Tip #2: Put all handlers/filters on the root logger.
Tip #3: Don't use the root logger in your code.
Tip #4: Make one non-root logger for each subcomponent in large application.
        You don't need a logger (For Example: getLogger(__name__)) for every file.
Tip #5: Store the log config in JSON or YMAL file.
Tip #6: Use ISO-8601 Timestamps format with timezone.
Tip #7: Store presistent logs in JSON
Tip #8  Add context with logging.info("message",extra={...})
Tip #9: Log off the Main Thread


